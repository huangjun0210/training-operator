/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/tensorflow/k8s/pkg/apis/tensorflow/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TfJobLister helps list TfJobs.
type TfJobLister interface {
	// List lists all TfJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TfJob, err error)
	// TfJobs returns an object that can list and get TfJobs.
	TfJobs(namespace string) TfJobNamespaceLister
	TfJobListerExpansion
}

// tfJobLister implements the TfJobLister interface.
type tfJobLister struct {
	indexer cache.Indexer
}

// NewTfJobLister returns a new TfJobLister.
func NewTfJobLister(indexer cache.Indexer) TfJobLister {
	return &tfJobLister{indexer: indexer}
}

// List lists all TfJobs in the indexer.
func (s *tfJobLister) List(selector labels.Selector) (ret []*v1alpha1.TfJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TfJob))
	})
	return ret, err
}

// TfJobs returns an object that can list and get TfJobs.
func (s *tfJobLister) TfJobs(namespace string) TfJobNamespaceLister {
	return tfJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TfJobNamespaceLister helps list and get TfJobs.
type TfJobNamespaceLister interface {
	// List lists all TfJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TfJob, err error)
	// Get retrieves the TfJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TfJob, error)
	TfJobNamespaceListerExpansion
}

// tfJobNamespaceLister implements the TfJobNamespaceLister
// interface.
type tfJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TfJobs in the indexer for a given namespace.
func (s tfJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TfJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TfJob))
	})
	return ret, err
}

// Get retrieves the TfJob from the indexer for a given namespace and name.
func (s tfJobNamespaceLister) Get(name string) (*v1alpha1.TfJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tfjob"), name)
	}
	return obj.(*v1alpha1.TfJob), nil
}
